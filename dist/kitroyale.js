/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(self, () => {
return /******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "../src/config.js":
/*!************************!*\
  !*** ../src/config.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"config\": () => (/* binding */ config)\n/* harmony export */ });\nvar _ref;\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar config = {\n  \"ui\": {\n    \"local\": \"en-GB\",\n    \"currency\": \"GBP\",\n    \"currencySign\": \"Â£\",\n    \"timeZone\": \"Europe/London\",\n    \"date\": {\n      \"date\": \"DD-MMM-YYYY\",\n      \"month\": \"MMM YYYY\",\n      \"week\": \"#WW/YY\"\n    },\n    \"colors\": [\"#1896c6\", \"#EF767A\", \"#456990\", \"#49DCB1\", \"#EEB868\"],\n    \"color\": {\n      \"rows\": [\"#1896c6\", \"#EF767A\", \"#456990\", \"#49DCB1\", \"#EEB868\"],\n      \"positive\": \"#008000\",\n      \"negative\": \"#FF0000\"\n    },\n    \"data\": {\n      \"payments\": {\n        \"adyen_cc\": \"Adyen cc\",\n        \"adyen_hpp\": \"Adyen hpp\",\n        \"paypal_express\": \"Paypal\",\n        \"globale\": \"Global-e\",\n        \"klarna_kp\": \"Klarna\",\n        \"free\": \"Free\",\n        \"checkmo\": \"Check mo\",\n        \"stripe\": \"Stripe\",\n        \"braintree_paypal\": \"Paypal braintree\"\n      }\n    },\n    \"topMenu\": {\n      \"colors\": {\n        \"topColor\": '#64748b',\n        \"topActive\": '#000000',\n        \"active\": '#000001',\n        // word #000001 used in styles, important to have\n        \"color\": '#000000'\n      },\n      \"sales\": {\n        \"title\": \"Sales\",\n        \"icon\": \"timeline-bar-chart\",\n        \"submenus\": [{\n          \"title\": \"Sales overview\",\n          \"page\": \"sales_sale-overview\"\n        }, {\n          \"title\": \"Daily sales summary\",\n          \"page\": \"sales_daily-sales-summary\"\n        }, {\n          \"title\": \"Ecommerce weekly\",\n          \"page\": \"sales_ecommerce-weekly\"\n        }, {\n          \"title\": \"Offline retail weekly\",\n          \"page\": \"sales_offline-retail-weekly\"\n        }, {\n          \"title\": \"Annual sales summary\",\n          \"page\": \"sales_annual-sales-summary\"\n        }, {\n          \"title\": \"Best sellers\",\n          \"page\": \"sales_best-sellers\"\n        }]\n      },\n      \"finance\": {\n        \"title\": \"Finance\",\n        \"icon\": \"timeline-area-chart\",\n        \"submenus\": [{\n          \"title\": \"Finance overview\",\n          \"page\": \"finance_finance-overview\"\n        }, {\n          \"title\": \"Sale summary\",\n          \"page\": \"finance_sales-summary\"\n        }, {\n          \"title\": \"Product detail\",\n          \"page\": \"finance_poduct-details\"\n        }, {\n          \"title\": \"Sales by payment\",\n          \"page\": \"finance_sales-by-payment\"\n        }, {\n          \"title\": \"Sales by country\",\n          \"page\": \"finance_sales-by-country\"\n        }, {\n          \"title\": \"Shipping\",\n          \"page\": \"finance_shipping\"\n        }, {\n          \"title\": \"Annual summary\",\n          \"page\": \"finance_annual-summary\"\n        }, {\n          \"title\": \"Coupon details\",\n          \"page\": \"finance_coupon\"\n        }]\n      },\n      \"product\": {\n        \"title\": \"Product\",\n        \"icon\": \"timshopping-cart\",\n        \"disabled\": true,\n        \"submenus\": [{\n          \"title\": \"Product 1\",\n          \"page\": \"\",\n          \"visible\": false\n        }]\n      },\n      \"merchandizing\": {\n        \"title\": \"Merchandizing\",\n        \"icon\": \"flash\",\n        \"disabled\": true,\n        \"submenus\": [{\n          \"title\": \"Merchandizing\",\n          \"page\": \"merchandizing_overview\"\n        }, {\n          \"title\": \"Merchandizing summary\",\n          \"page\": \"merchandizing_summary\"\n        }, {\n          \"title\": \"Merchandizing country\",\n          \"page\": \"merchandizing_country\"\n        }]\n      }\n    },\n    \"table\": {\n      \"colors\": {\n        \"first_colulmn\": \"#f5f5f5\",\n        \"invoice_colulmn\": \"#febfdb\",\n        \"refund_colulmn\": \"#bffedb\",\n        \"positive\": \"#008000\",\n        \"negative\": \"#FF0000\"\n      },\n      \"sales_daily_sales_summary\": {\n        \"columnTitleA\": {\n          \"title\": function title() {\n            return \"Current week #\" + reports.getDateA().format(\"WW YYYY\");\n          }\n        },\n        \"columnTitleB\": {\n          \"title\": function title() {\n            return \"Previous week #\" + reports.getDateB().format(\"WW YYYY\");\n          }\n        },\n        \"columnTitleC\": {\n          \"title\": function title() {\n            return \"Variance #\" + reports.getDateA().format(\"WW YYYY\") + \" vs #\" + reports.getDateB().format(\"WW YYYY\");\n          }\n        },\n        \"columnTitleD\": {\n          \"title\": function title() {\n            return \"Previous year #\" + reports.getDateC().format(\"WW YYYY\");\n          }\n        },\n        \"columnTitleE\": {\n          \"title\": function title() {\n            return \"Variance #\" + reports.getDateA().format(\"WW YYYY\") + \" vs #\" + reports.getDateC().format(\"WW YYYY\");\n          }\n        },\n        \"columnSun\": {\n          \"title\": function title() {\n            return \"Sun\";\n          }\n        },\n        \"columnMon\": {\n          \"title\": function title() {\n            return \"Mon\";\n          }\n        },\n        \"columnTue\": {\n          \"title\": function title() {\n            return \"Tue\";\n          }\n        },\n        \"columnWed\": {\n          \"title\": function title() {\n            return \"Wed\";\n          }\n        },\n        \"columnThu\": {\n          \"title\": function title() {\n            return \"Thu\";\n          }\n        },\n        \"columnFri\": {\n          \"title\": function title() {\n            return \"Fri\";\n          }\n        },\n        \"columnSat\": {\n          \"title\": function title() {\n            return \"Sat\";\n          }\n        },\n        \"columnWtd\": {\n          \"title\": function title() {\n            return \"WTD\";\n          }\n        },\n        \"columnWeek\": {\n          \"title\": function title() {\n            return \"WoW total\";\n          }\n        }\n      },\n      \"sales_ecommerce_weekly\": {\n        \"columnTitleA\": {\n          \"title\": function title() {\n            return \"\";\n          }\n        },\n        \"columnTitleB\": {\n          \"title\": function title() {\n            return \"Current week #\" + reports.getDateA().format(\"WW YYYY\");\n          }\n        },\n        \"columnTitleC\": {\n          \"title\": function title() {\n            return \"Previous week #\" + reports.getDateB().format(\"WW YYYY\");\n          }\n        },\n        \"columnTitleD\": {\n          \"title\": function title() {\n            return \"Var #\" + reports.getDateA().format(\"WW YYYY\") + \" vs #\" + reports.getDateB().format(\"WW YYYY\");\n          }\n        },\n        \"columnTitleE\": {\n          \"title\": function title() {\n            return \"Previous year #\" + reports.getDateC().format(\"WW YYYY\");\n          }\n        },\n        \"columnTitleF\": {\n          \"title\": function title() {\n            return \"Var #\" + reports.getDateA().format(\"WW YYYY\") + \" vs #\" + reports.getDateC().format(\"WW YYYY\");\n          }\n        },\n        \"columnDayPrev\": {\n          \"title\": function title() {\n            return moment(filter_period.selectedDate).subtract(1, 'week').format('ddd, DD.MM');\n          }\n        },\n        \"columnDayCurr\": {\n          \"title\": function title() {\n            return moment(filter_period.selectedDate).format('ddd, DD.MM');\n          }\n        },\n        \"columnDayVar\": {\n          \"title\": function title() {\n            return \"Var %\";\n          }\n        },\n        \"columnWtdPrev\": {\n          \"title\": function title() {\n            return \"WTD, #\" + moment(filter_period.selectedDate).subtract(1, 'week').format('WW');\n          }\n        },\n        \"columnWtdCurr\": {\n          \"title\": function title() {\n            return \"WTD, #\" + moment(filter_period.selectedDate).format('WW');\n          }\n        },\n        \"columnWtdVar\": {\n          \"title\": function title() {\n            return \"WTD, Var %\";\n          }\n        },\n        \"columnTotalPrev\": {\n          \"title\": function title() {\n            return \"Total, #\" + moment(filter_period.selectedDate).subtract(1, 'week').format('WW');\n          }\n        },\n        \"columnTotalCurr\": {\n          \"title\": function title() {\n            return \"Total, #\" + moment(filter_period.selectedDate).format('WW');\n          }\n        },\n        \"columnTotalVar\": {\n          \"title\": function title() {\n            return \"Total, Var %\";\n          }\n        },\n        \"columnSun\": {\n          \"title\": function title() {\n            return \"Sun\";\n          }\n        },\n        \"columnMon\": {\n          \"title\": function title() {\n            return \"Mon\";\n          }\n        },\n        \"columnTue\": {\n          \"title\": function title() {\n            return \"Tue\";\n          }\n        },\n        \"columnWed\": {\n          \"title\": function title() {\n            return \"Wed\";\n          }\n        },\n        \"columnThu\": {\n          \"title\": function title() {\n            return \"Thu\";\n          }\n        },\n        \"columnFri\": {\n          \"title\": function title() {\n            return \"Fri\";\n          }\n        },\n        \"columnSat\": {\n          \"title\": function title() {\n            return \"Sat\";\n          }\n        },\n        \"columnWtd\": {\n          \"title\": function title() {\n            return \"WTD\";\n          }\n        },\n        \"columnWeek\": {\n          \"title\": function title() {\n            return \"WoW total\";\n          }\n        }\n      },\n      \"sales_offline_retail_weekly\": {\n        \"columnTitleA\": {\n          \"title\": function title() {\n            return \"\";\n          }\n        },\n        \"columnTitleB\": {\n          \"title\": function title() {\n            return \"Current week #\" + reports.getDateA().format(\"WW YYYY\");\n          }\n        },\n        \"columnTitleC\": {\n          \"title\": function title() {\n            return \"Previous week #\" + reports.getDateB().format(\"WW YYYY\");\n          }\n        },\n        \"columnTitleD\": {\n          \"title\": function title() {\n            return \"Var #\" + reports.getDateA().format(\"WW YYYY\") + \" vs #\" + reports.getDateB().format(\"WW YYYY\");\n          }\n        },\n        \"columnTitleE\": {\n          \"title\": function title() {\n            return \"Previous year #\" + reports.getDateC().format(\"WW YYYY\");\n          }\n        },\n        \"columnTitleF\": {\n          \"title\": function title() {\n            return \"Var #\" + reports.getDateA().format(\"WW YYYY\") + \" vs #\" + reports.getDateC().format(\"WW YYYY\");\n          }\n        },\n        \"columnDayPrev\": {\n          \"title\": function title() {\n            return moment(filter_period.selectedDate).subtract(1, 'week').format('ddd, DD.MM');\n          }\n        },\n        \"columnDayCurr\": {\n          \"title\": function title() {\n            return moment(filter_period.selectedDate).format('ddd, DD.MM');\n          }\n        },\n        \"columnDayVar\": {\n          \"title\": function title() {\n            return \"Var %\";\n          }\n        },\n        \"columnWtdPrev\": {\n          \"title\": function title() {\n            return \"WTD, #\" + moment(filter_period.selectedDate).subtract(1, 'week').format('WW');\n          }\n        },\n        \"columnWtdCurr\": {\n          \"title\": function title() {\n            return \"WTD, #\" + moment(filter_period.selectedDate).format('WW');\n          }\n        },\n        \"columnWtdVar\": {\n          \"title\": function title() {\n            return \"WTD, Var %\";\n          }\n        },\n        \"columnTotalPrev\": {\n          \"title\": function title() {\n            return \"Total, #\" + moment(filter_period.selectedDate).subtract(1, 'week').format('WW');\n          }\n        },\n        \"columnTotalCurr\": {\n          \"title\": function title() {\n            return \"Total, #\" + moment(filter_period.selectedDate).format('WW');\n          }\n        },\n        \"columnTotalVar\": {\n          \"title\": function title() {\n            return \"Total, Var %\";\n          }\n        },\n        \"columnSun\": {\n          \"title\": function title() {\n            return \"Sun\";\n          }\n        },\n        \"columnMon\": {\n          \"title\": function title() {\n            return \"Mon\";\n          }\n        },\n        \"columnTue\": {\n          \"title\": function title() {\n            return \"Tue\";\n          }\n        },\n        \"columnWed\": {\n          \"title\": function title() {\n            return \"Wed\";\n          }\n        },\n        \"columnThu\": {\n          \"title\": function title() {\n            return \"Thu\";\n          }\n        },\n        \"columnFri\": {\n          \"title\": function title() {\n            return \"Fri\";\n          }\n        },\n        \"columnSat\": {\n          \"title\": function title() {\n            return \"Sat\";\n          }\n        },\n        \"columnWtd\": {\n          \"title\": function title() {\n            return \"WTD\";\n          }\n        },\n        \"columnWeek\": {\n          \"title\": function title() {\n            return \"WoW total\";\n          }\n        }\n      },\n      \"sales_annual_sales_summary\": {\n        \"columnTitleA\": {\n          \"title\": function title() {\n            return \"Current \" + reports.getPeriodAFrom().format('YYYY');\n          }\n        },\n        \"columnTitleB\": {\n          \"title\": function title() {\n            return \"Previous \" + reports.getPeriodBFrom().format('YYYY');\n          }\n        },\n        \"columnTitleC\": {\n          \"title\": function title() {\n            return reports.getPeriodAFrom().format('YYYY') + \" vs \" + reports.getPeriodBFrom().format('YYYY');\n          }\n        },\n        \"columnJan\": {\n          \"title\": function title() {\n            return \"Jan\";\n          }\n        },\n        \"columnFeb\": {\n          \"title\": function title() {\n            return \"Feb\";\n          }\n        },\n        \"columnMar\": {\n          \"title\": function title() {\n            return \"Mar\";\n          }\n        },\n        \"columnApr\": {\n          \"title\": function title() {\n            return \"Apr\";\n          }\n        },\n        \"columnMay\": {\n          \"title\": function title() {\n            return \"May\";\n          }\n        },\n        \"columnJun\": {\n          \"title\": function title() {\n            return \"Jun\";\n          }\n        },\n        \"columnJul\": {\n          \"title\": function title() {\n            return \"Jul\";\n          }\n        },\n        \"columnAug\": {\n          \"title\": function title() {\n            return \"Aug\";\n          }\n        },\n        \"columnSep\": {\n          \"title\": function title() {\n            return \"Sep\";\n          }\n        },\n        \"columnOct\": {\n          \"title\": function title() {\n            return \"Oct\";\n          }\n        },\n        \"columnNov\": {\n          \"title\": function title() {\n            return \"Nov\";\n          }\n        },\n        \"columnDec\": {\n          \"title\": function title() {\n            return \"Dec\";\n          }\n        },\n        \"columnYtd\": {\n          \"title\": function title() {\n            return \"YTD\";\n          }\n        },\n        \"columnTotal\": {\n          \"title\": function title() {\n            return \"Total\";\n          }\n        }\n      },\n      \"sales_best_sellers\": {\n        \"columnRank\": {\n          \"title\": function title() {\n            return \"Rank\";\n          }\n        },\n        \"columnImage\": {\n          \"title\": function title() {\n            return \"Image\";\n          }\n        },\n        \"columnSku\": {\n          \"title\": function title() {\n            return \"SKU\";\n          }\n        },\n        \"columnSold\": {\n          \"title\": function title() {\n            return \"Sold items\";\n          }\n        },\n        \"columnOrig\": {\n          \"title\": function title() {\n            return \"Original price\";\n          }\n        },\n        \"columnPrice\": {\n          \"title\": function title() {\n            return \"Price\";\n          }\n        },\n        \"columnTotal\": {\n          \"title\": function title() {\n            return \"Total sold\";\n          }\n        },\n        \"columnName\": {\n          \"title\": function title() {\n            return \"Product name\";\n          }\n        }\n      },\n      \"finance_sales_summary\": {\n        \"columnTitle\": {\n          \"title\": function title() {\n            return \"\";\n          }\n        },\n        \"columnThis\": {\n          \"title\": function title() {\n            return appsmith.store.period;\n          }\n        },\n        \"columnPrev\": {\n          \"title\": function title() {\n            return appsmith.store.compare;\n          }\n        },\n        \"columnVar\": {\n          \"title\": function title() {\n            return \"Variance\";\n          }\n        }\n      },\n      \"finance_sales_by_country\": {\n        \"columnTitle\": {\n          \"title\": function title() {\n            return \"\";\n          }\n        },\n        \"columnCurr\": {\n          \"title\": function title() {\n            return filter_country.selectedOptionLabels.join();\n          }\n        },\n        \"columnGlob\": {\n          \"title\": function title() {\n            return \"Global Total\";\n          }\n        },\n        \"columnVar\": {\n          \"title\": function title() {\n            return \"% of Global Total\";\n          }\n        }\n      },\n      \"finance_annual_summary\": {},\n      \"finance_sales_details\": {\n        \"columnTitle\": {\n          \"title\": function title() {\n            return \"Sku\";\n          }\n        },\n        \"columnName\": {\n          \"title\": function title() {\n            return \"Name\";\n          }\n        },\n        \"columnPrice\": {\n          \"title\": function title() {\n            return \"Price\";\n          }\n        },\n        \"columnSpecial\": {\n          \"title\": function title() {\n            return \"Special\";\n          }\n        },\n        \"columnQty\": {\n          \"title\": function title() {\n            return \"Qty\";\n          }\n        },\n        \"columnQtyRefunded\": {\n          \"title\": function title() {\n            return \"Qty refunded\";\n          }\n        },\n        \"columnTotal\": {\n          \"title\": function title() {\n            return \"Total\";\n          }\n        },\n        \"columnRevenue\": {\n          \"title\": function title() {\n            return \"Revenue\";\n          }\n        },\n        \"columnRefunded\": {\n          \"title\": function title() {\n            return \"Refunded\";\n          }\n        },\n        \"columnNetQty\": {\n          \"title\": function title() {\n            return \"NetQty\";\n          }\n        },\n        \"columnNetSales\": {\n          \"title\": function title() {\n            return \"Net Sales\";\n          }\n        },\n        \"columnNetSalesVat\": {\n          \"title\": function title() {\n            return \"Net Sales Vat\";\n          }\n        },\n        \"columnNetTotalSales\": {\n          \"title\": function title() {\n            return \"Net Total Sales\";\n          }\n        },\n        \"columnCost\": {\n          \"title\": function title() {\n            return \"Cost\";\n          }\n        },\n        \"columnCostTotal\": {\n          \"title\": function title() {\n            return \"Cost Total\";\n          }\n        },\n        \"columnProfit\": {\n          \"title\": function title() {\n            return \"Profit\";\n          }\n        },\n        \"columnMargin\": {\n          \"title\": function title() {\n            return \"Margin\";\n          }\n        },\n        \"columnStock\": {\n          \"title\": function title() {\n            return \"Stock\";\n          }\n        }\n      },\n      \"finance_shipping\": {\n        \"columnTitle\": {\n          \"title\": function title() {\n            return \"Method\";\n          }\n        },\n        \"columnOrders\": {\n          \"title\": function title() {\n            return \"Orders\";\n          }\n        },\n        \"columnShipments\": {\n          \"title\": function title() {\n            return \"Shipments\";\n          }\n        },\n        \"columnQty\": {\n          \"title\": function title() {\n            return \"Qty\";\n          }\n        },\n        \"columnFreeQty\": {\n          \"title\": function title() {\n            return \"Free qty\";\n          }\n        },\n        \"columnAOV\": {\n          \"title\": function title() {\n            return \"AOV\";\n          }\n        },\n        \"columnShipping\": {\n          \"title\": function title() {\n            return \"Shipping\";\n          }\n        },\n        \"columnShippingVAT\": {\n          \"title\": function title() {\n            return \"Shipping VAT\";\n          }\n        },\n        \"columnTotalExVAT\": {\n          \"title\": function title() {\n            return \"Total ex VAT\";\n          }\n        },\n        \"columnTotalVAT\": {\n          \"title\": function title() {\n            return \"Total VAT\";\n          }\n        },\n        \"columnTotal\": {\n          \"title\": function title() {\n            return \"Total \";\n          }\n        },\n        \"columnShippingRefundedExVAT\": {\n          \"title\": function title() {\n            return \"Shipping refunded ex VAT\";\n          }\n        }\n      },\n      \"finance_coupon\": {\n        \"columnTitle\": {\n          \"title\": function title() {\n            return \"Order Id\";\n          }\n        },\n        \"columnCoupon\": {\n          \"title\": function title() {\n            return \"Coupon\";\n          }\n        },\n        \"columnPaymentType\": {\n          \"title\": function title() {\n            return \"Payment type\";\n          }\n        },\n        \"columnOrdersTotal\": {\n          \"title\": function title() {\n            return \"Orders total\";\n          }\n        },\n        \"columnOrdersSubtotal\": {\n          \"title\": function title() {\n            return \"Orders subtotal\";\n          }\n        },\n        \"columnOrdersShipping\": {\n          \"title\": function title() {\n            return \"Orders shipping\";\n          }\n        },\n        \"columnRefundsTotal\": {\n          \"title\": function title() {\n            return \"Refunds total\";\n          }\n        }\n      }\n    },\n    \"filter\": {\n      \"status\": [{\n        \"value\": \"complete\",\n        \"label\": \"Complete\"\n      }, {\n        \"value\": \"canceled\",\n        \"label\": \"Canceled\"\n      }, {\n        \"value\": \"closed\",\n        \"label\": \"Closed\"\n      }, {\n        \"value\": \"new\",\n        \"label\": \"New\"\n      }, {\n        \"value\": \"holded\",\n        \"label\": \"Holded\"\n      }, {\n        \"value\": \"payment_review\",\n        \"label\": \"Payment review\"\n      }, {\n        \"value\": \"pending_payment\",\n        \"label\": \"Pending payment\"\n      }, {\n        \"value\": \"processing\",\n        \"label\": \"Processing\"\n      }],\n      \"payment\": [{\n        \"value\": \"adyen_cc\",\n        \"label\": \"Adyen cc\"\n      }, {\n        \"value\": \"adyen_hpp\",\n        \"label\": \"Adyen hpp\"\n      }, {\n        \"value\": \"paypal_express\",\n        \"label\": \"Paypal express\"\n      }, {\n        \"value\": \"globale\",\n        \"label\": \"Global-e\"\n      }, {\n        \"value\": \"klarna_kp\",\n        \"label\": \"Klarna pk\"\n      }, {\n        \"value\": \"free\",\n        \"label\": \"Free\"\n      }, (_ref = {\n        \"value\": \"checkmo\"\n      }, _defineProperty(_ref, \"value\", \"canceled\"), _defineProperty(_ref, \"label\", \"Canceled\"), _ref), {\n        \"value\": \"closed\",\n        \"label\": \"Closed\"\n      }, {\n        \"value\": \"complete\",\n        \"label\": \"Complete\"\n      }, {\n        \"value\": \"holded\",\n        \"label\": \"Holded\"\n      }, {\n        \"value\": \"new\",\n        \"label\": \"New\"\n      }, {\n        \"value\": \"payment_review\",\n        \"label\": \"Payment Review\"\n      }, {\n        \"value\": \"pending_payment\",\n        \"label\": \"Pending Payment\"\n      }, {\n        \"value\": \"processing\",\n        \"label\": \"Processing\"\n      }],\n      \"channel\": [{\n        \"label\": \"All\",\n        \"value\": \"_all\",\n        \"children\": [{\n          \"label\": \"Ecommerce all\",\n          \"value\": \"_e_all\",\n          \"children\": [{\n            \"label\": \"UK\",\n            \"value\": \"uk\"\n          }, {\n            \"label\": \"EU\",\n            \"value\": \"eu\"\n          }, {\n            \"label\": \"US\",\n            \"value\": \"us\"\n          }]\n        }, {\n          \"label\": \"Offline all\",\n          \"value\": \"_o_all\",\n          \"children\": [{\n            \"label\": \"Offline retail\",\n            \"value\": \"sq\"\n          }]\n        }]\n      }],\n      \"channel_f\": [{\n        \"label\": \"Ecommerce all\",\n        \"value\": \"_e_all\",\n        \"children\": [{\n          \"label\": \"UK\",\n          \"value\": \"uk\"\n        }, {\n          \"label\": \"EU\",\n          \"value\": \"eu\"\n        }, {\n          \"label\": \"US\",\n          \"value\": \"us\"\n        }]\n      }],\n      \"period\": [{\n        \"label\": \"This week\",\n        \"value\": \"week\"\n      }, {\n        \"label\": \"Date range\",\n        \"value\": \"date\"\n      }, {\n        \"label\": \"This month\",\n        \"value\": \"month\"\n      }, {\n        \"label\": \"This year\",\n        \"value\": \"year\"\n      }, {\n        \"label\": \"This fiscal year\",\n        \"value\": \"fyear\"\n      }, {\n        \"label\": \"Last week\",\n        \"value\": \"lweek\"\n      }, {\n        \"label\": \"Last month\",\n        \"value\": \"lmonth\"\n      }, {\n        \"label\": \"Last year\",\n        \"value\": \"lyear\"\n      }, {\n        \"label\": \"Last fiscal year\",\n        \"value\": \"lfyear\"\n      }, {\n        \"label\": \"Last 7 days\",\n        \"value\": \"7d\"\n      }, {\n        \"label\": \"Last 30 days\",\n        \"value\": \"30d\"\n      }, {\n        \"label\": \"Last 90 days\",\n        \"value\": \"90d\"\n      }, {\n        \"label\": \"Last 12 months\",\n        \"value\": \"12m\"\n      }],\n      \"country\": [{\n        \"value\": \"AF\",\n        \"label\": \"Afghanistan\"\n      }, {\n        \"value\": \"AX\",\n        \"label\": \"Aland Islands\"\n      }, {\n        \"value\": \"AL\",\n        \"label\": \"Albania\"\n      }, {\n        \"value\": \"DZ\",\n        \"label\": \"Algeria\"\n      }, {\n        \"value\": \"AS\",\n        \"label\": \"American Samoa\"\n      }, {\n        \"value\": \"AD\",\n        \"label\": \"Andorra\"\n      }, {\n        \"value\": \"AO\",\n        \"label\": \"Angola\"\n      }, {\n        \"value\": \"AI\",\n        \"label\": \"Anguilla\"\n      }, {\n        \"value\": \"AQ\",\n        \"label\": \"Antarctica\"\n      }, {\n        \"value\": \"AG\",\n        \"label\": \"Antigua and Barbuda\"\n      }, {\n        \"value\": \"AR\",\n        \"label\": \"Argentina\"\n      }, {\n        \"value\": \"AM\",\n        \"label\": \"Armenia\"\n      }, {\n        \"value\": \"AW\",\n        \"label\": \"Aruba\"\n      }, {\n        \"value\": \"AU\",\n        \"label\": \"Australia\"\n      }, {\n        \"value\": \"AT\",\n        \"label\": \"Austria\"\n      }, {\n        \"value\": \"AZ\",\n        \"label\": \"Azerbaijan\"\n      }, {\n        \"value\": \"BS\",\n        \"label\": \"Bahamas\"\n      }, {\n        \"value\": \"BH\",\n        \"label\": \"Bahrain\"\n      }, {\n        \"value\": \"BD\",\n        \"label\": \"Bangladesh\"\n      }, {\n        \"value\": \"BB\",\n        \"label\": \"Barbados\"\n      }, {\n        \"value\": \"BY\",\n        \"label\": \"Belarus\"\n      }, {\n        \"value\": \"BE\",\n        \"label\": \"Belgium\"\n      }, {\n        \"value\": \"BZ\",\n        \"label\": \"Belize\"\n      }, {\n        \"value\": \"BJ\",\n        \"label\": \"Benin\"\n      }, {\n        \"value\": \"BM\",\n        \"label\": \"Bermuda\"\n      }, {\n        \"value\": \"BT\",\n        \"label\": \"Bhutan\"\n      }, {\n        \"value\": \"BO\",\n        \"label\": \"Bolivia, Plurinational State of\"\n      }, {\n        \"value\": \"BQ\",\n        \"label\": \"Bonaire, Sint Eustatius and Saba\"\n      }, {\n        \"value\": \"BA\",\n        \"label\": \"Bosnia and Herzegovina\"\n      }, {\n        \"value\": \"BW\",\n        \"label\": \"Botswana\"\n      }, {\n        \"value\": \"BV\",\n        \"label\": \"Bouvet Island\"\n      }, {\n        \"value\": \"BR\",\n        \"label\": \"Brazil\"\n      }, {\n        \"value\": \"IO\",\n        \"label\": \"British Indian Ocean Territory\"\n      }, {\n        \"value\": \"BN\",\n        \"label\": \"Brunei Darussalam\"\n      }, {\n        \"value\": \"BG\",\n        \"label\": \"Bulgaria\"\n      }, {\n        \"value\": \"BF\",\n        \"label\": \"Burkina Faso\"\n      }, {\n        \"value\": \"BI\",\n        \"label\": \"Burundi\"\n      }, {\n        \"value\": \"KH\",\n        \"label\": \"Cambodia\"\n      }, {\n        \"value\": \"CM\",\n        \"label\": \"Cameroon\"\n      }, {\n        \"value\": \"CA\",\n        \"label\": \"Canada\"\n      }, {\n        \"value\": \"CV\",\n        \"label\": \"Cape Verde\"\n      }, {\n        \"value\": \"KY\",\n        \"label\": \"Cayman Islands\"\n      }, {\n        \"value\": \"CF\",\n        \"label\": \"Central African Republic\"\n      }, {\n        \"value\": \"TD\",\n        \"label\": \"Chad\"\n      }, {\n        \"value\": \"CL\",\n        \"label\": \"Chile\"\n      }, {\n        \"value\": \"CN\",\n        \"label\": \"China\"\n      }, {\n        \"value\": \"CX\",\n        \"label\": \"Christmas Island\"\n      }, {\n        \"value\": \"CC\",\n        \"label\": \"Cocos (Keeling) Islands\"\n      }, {\n        \"value\": \"CO\",\n        \"label\": \"Colombia\"\n      }, {\n        \"value\": \"KM\",\n        \"label\": \"Comoros\"\n      }, {\n        \"value\": \"CG\",\n        \"label\": \"Congo\"\n      }, {\n        \"value\": \"CD\",\n        \"label\": \"Congo, the Democratic Republic of the\"\n      }, {\n        \"value\": \"CK\",\n        \"label\": \"Cook Islands\"\n      }, {\n        \"value\": \"CR\",\n        \"label\": \"Costa Rica\"\n      }, {\n        \"value\": \"CI\",\n        \"label\": \"Cote d'Ivoire\"\n      }, {\n        \"value\": \"HR\",\n        \"label\": \"Croatia\"\n      }, {\n        \"value\": \"CU\",\n        \"label\": \"Cuba\"\n      }, {\n        \"value\": \"CW\",\n        \"label\": \"Curacao\"\n      }, {\n        \"value\": \"CY\",\n        \"label\": \"Cyprus\"\n      }, {\n        \"value\": \"CZ\",\n        \"label\": \"Czech Republic\"\n      }, {\n        \"value\": \"DK\",\n        \"label\": \"Denmark\"\n      }, {\n        \"value\": \"DJ\",\n        \"label\": \"Djibouti\"\n      }, {\n        \"value\": \"DM\",\n        \"label\": \"Dominica\"\n      }, {\n        \"value\": \"DO\",\n        \"label\": \"Dominican Republic\"\n      }, {\n        \"value\": \"EC\",\n        \"label\": \"Ecuador\"\n      }, {\n        \"value\": \"EG\",\n        \"label\": \"Egypt\"\n      }, {\n        \"value\": \"SV\",\n        \"label\": \"El Salvador\"\n      }, {\n        \"value\": \"GQ\",\n        \"label\": \"Equatorial Guinea\"\n      }, {\n        \"value\": \"ER\",\n        \"label\": \"Eritrea\"\n      }, {\n        \"value\": \"EE\",\n        \"label\": \"Estonia\"\n      }, {\n        \"value\": \"ET\",\n        \"label\": \"Ethiopia\"\n      }, {\n        \"value\": \"FK\",\n        \"label\": \"Falkland Islands (Malvinas)\"\n      }, {\n        \"value\": \"FO\",\n        \"label\": \"Faroe Islands\"\n      }, {\n        \"value\": \"FJ\",\n        \"label\": \"Fiji\"\n      }, {\n        \"value\": \"FI\",\n        \"label\": \"Finland\"\n      }, {\n        \"value\": \"FR\",\n        \"label\": \"France\"\n      }, {\n        \"value\": \"GF\",\n        \"label\": \"French Guiana\"\n      }, {\n        \"value\": \"PF\",\n        \"label\": \"French Polynesia\"\n      }, {\n        \"value\": \"TF\",\n        \"label\": \"French Southern Territories\"\n      }, {\n        \"value\": \"GA\",\n        \"label\": \"Gabon\"\n      }, {\n        \"value\": \"GM\",\n        \"label\": \"Gambia\"\n      }, {\n        \"value\": \"GE\",\n        \"label\": \"Georgia\"\n      }, {\n        \"value\": \"DE\",\n        \"label\": \"Germany\"\n      }, {\n        \"value\": \"GH\",\n        \"label\": \"Ghana\"\n      }, {\n        \"value\": \"GI\",\n        \"label\": \"Gibraltar\"\n      }, {\n        \"value\": \"GR\",\n        \"label\": \"Greece\"\n      }, {\n        \"value\": \"GL\",\n        \"label\": \"Greenland\"\n      }, {\n        \"value\": \"GD\",\n        \"label\": \"Grenada\"\n      }, {\n        \"value\": \"GP\",\n        \"label\": \"Guadeloupe\"\n      }, {\n        \"value\": \"GU\",\n        \"label\": \"Guam\"\n      }, {\n        \"value\": \"GT\",\n        \"label\": \"Guatemala\"\n      }, {\n        \"value\": \"GG\",\n        \"label\": \"Guernsey\"\n      }, {\n        \"value\": \"GN\",\n        \"label\": \"Guinea\"\n      }, {\n        \"value\": \"GW\",\n        \"label\": \"Guinea-Bissau\"\n      }, {\n        \"value\": \"GY\",\n        \"label\": \"Guyana\"\n      }, {\n        \"value\": \"HT\",\n        \"label\": \"Haiti\"\n      }, {\n        \"value\": \"HM\",\n        \"label\": \"Heard Island and McDonald Islands\"\n      }, {\n        \"value\": \"VA\",\n        \"label\": \"Holy See (Vatican City State)\"\n      }, {\n        \"value\": \"HN\",\n        \"label\": \"Honduras\"\n      }, {\n        \"value\": \"HK\",\n        \"label\": \"Hong Kong\"\n      }, {\n        \"value\": \"HU\",\n        \"label\": \"Hungary\"\n      }, {\n        \"value\": \"IS\",\n        \"label\": \"Iceland\"\n      }, {\n        \"value\": \"IN\",\n        \"label\": \"India\"\n      }, {\n        \"value\": \"ID\",\n        \"label\": \"Indonesia\"\n      }, {\n        \"value\": \"IR\",\n        \"label\": \"Iran, Islamic Republic of\"\n      }, {\n        \"value\": \"IQ\",\n        \"label\": \"Iraq\"\n      }, {\n        \"value\": \"IE\",\n        \"label\": \"Ireland\"\n      }, {\n        \"value\": \"IM\",\n        \"label\": \"Isle of Man\"\n      }, {\n        \"value\": \"IL\",\n        \"label\": \"Israel\"\n      }, {\n        \"value\": \"IT\",\n        \"label\": \"Italy\"\n      }, {\n        \"value\": \"JM\",\n        \"label\": \"Jamaica\"\n      }, {\n        \"value\": \"JP\",\n        \"label\": \"Japan\"\n      }, {\n        \"value\": \"JE\",\n        \"label\": \"Jersey\"\n      }, {\n        \"value\": \"JO\",\n        \"label\": \"Jordan\"\n      }, {\n        \"value\": \"KZ\",\n        \"label\": \"Kazakhstan\"\n      }, {\n        \"value\": \"KE\",\n        \"label\": \"Kenya\"\n      }, {\n        \"value\": \"KI\",\n        \"label\": \"Kiribati\"\n      }, {\n        \"value\": \"KP\",\n        \"label\": \"Korea, Democratic People's Republic of\"\n      }, {\n        \"value\": \"KR\",\n        \"label\": \"Korea, Republic of\"\n      }, {\n        \"value\": \"KW\",\n        \"label\": \"Kuwait\"\n      }, {\n        \"value\": \"KG\",\n        \"label\": \"Kyrgyzstan\"\n      }, {\n        \"value\": \"LA\",\n        \"label\": \"Lao People's Democratic Republic\"\n      }, {\n        \"value\": \"LV\",\n        \"label\": \"Latvia\"\n      }, {\n        \"value\": \"LB\",\n        \"label\": \"Lebanon\"\n      }, {\n        \"value\": \"LS\",\n        \"label\": \"Lesotho\"\n      }, {\n        \"value\": \"LR\",\n        \"label\": \"Liberia\"\n      }, {\n        \"value\": \"LY\",\n        \"label\": \"Libya\"\n      }, {\n        \"value\": \"LI\",\n        \"label\": \"Liechtenstein\"\n      }, {\n        \"value\": \"LT\",\n        \"label\": \"Lithuania\"\n      }, {\n        \"value\": \"LU\",\n        \"label\": \"Luxembourg\"\n      }, {\n        \"value\": \"MO\",\n        \"label\": \"Macao\"\n      }, {\n        \"value\": \"MK\",\n        \"label\": \"Macedonia, the Former Yugoslav Republic of\"\n      }, {\n        \"value\": \"MG\",\n        \"label\": \"Madagascar\"\n      }, {\n        \"value\": \"MW\",\n        \"label\": \"Malawi\"\n      }, {\n        \"value\": \"MY\",\n        \"label\": \"Malaysia\"\n      }, {\n        \"value\": \"MV\",\n        \"label\": \"Maldives\"\n      }, {\n        \"value\": \"ML\",\n        \"label\": \"Mali\"\n      }, {\n        \"value\": \"MT\",\n        \"label\": \"Malta\"\n      }, {\n        \"value\": \"MH\",\n        \"label\": \"Marshall Islands\"\n      }, {\n        \"value\": \"MQ\",\n        \"label\": \"Martinique\"\n      }, {\n        \"value\": \"MR\",\n        \"label\": \"Mauritania\"\n      }, {\n        \"value\": \"MU\",\n        \"label\": \"Mauritius\"\n      }, {\n        \"value\": \"YT\",\n        \"label\": \"Mayotte\"\n      }, {\n        \"value\": \"MX\",\n        \"label\": \"Mexico\"\n      }, {\n        \"value\": \"FM\",\n        \"label\": \"Micronesia, Federated States of\"\n      }, {\n        \"value\": \"MD\",\n        \"label\": \"Moldova, Republic of\"\n      }, {\n        \"value\": \"MC\",\n        \"label\": \"Monaco\"\n      }, {\n        \"value\": \"MN\",\n        \"label\": \"Mongolia\"\n      }, {\n        \"value\": \"ME\",\n        \"label\": \"Montenegro\"\n      }, {\n        \"value\": \"MS\",\n        \"label\": \"Montserrat\"\n      }, {\n        \"value\": \"MA\",\n        \"label\": \"Morocco\"\n      }, {\n        \"value\": \"MZ\",\n        \"label\": \"Mozambique\"\n      }, {\n        \"value\": \"MM\",\n        \"label\": \"Myanmar\"\n      }, {\n        \"value\": \"NA\",\n        \"label\": \"Namibia\"\n      }, {\n        \"value\": \"NR\",\n        \"label\": \"Nauru\"\n      }, {\n        \"value\": \"NP\",\n        \"label\": \"Nepal\"\n      }, {\n        \"value\": \"NL\",\n        \"label\": \"Netherlands\"\n      }, {\n        \"value\": \"NC\",\n        \"label\": \"New Caledonia\"\n      }, {\n        \"value\": \"NZ\",\n        \"label\": \"New Zealand\"\n      }, {\n        \"value\": \"NI\",\n        \"label\": \"Nicaragua\"\n      }, {\n        \"value\": \"NE\",\n        \"label\": \"Niger\"\n      }, {\n        \"value\": \"NG\",\n        \"label\": \"Nigeria\"\n      }, {\n        \"value\": \"NU\",\n        \"label\": \"Niue\"\n      }, {\n        \"value\": \"NF\",\n        \"label\": \"Norfolk Island\"\n      }, {\n        \"value\": \"MP\",\n        \"label\": \"Northern Mariana Islands\"\n      }, {\n        \"value\": \"NO\",\n        \"label\": \"Norway\"\n      }, {\n        \"value\": \"OM\",\n        \"label\": \"Oman\"\n      }, {\n        \"value\": \"PK\",\n        \"label\": \"Pakistan\"\n      }, {\n        \"value\": \"PW\",\n        \"label\": \"Palau\"\n      }, {\n        \"value\": \"PS\",\n        \"label\": \"Palestine, State of\"\n      }, {\n        \"value\": \"PA\",\n        \"label\": \"Panama\"\n      }, {\n        \"value\": \"PG\",\n        \"label\": \"Papua New Guinea\"\n      }, {\n        \"value\": \"PY\",\n        \"label\": \"Paraguay\"\n      }, {\n        \"value\": \"PE\",\n        \"label\": \"Peru\"\n      }, {\n        \"value\": \"PH\",\n        \"label\": \"Philippines\"\n      }, {\n        \"value\": \"PN\",\n        \"label\": \"Pitcairn\"\n      }, {\n        \"value\": \"PL\",\n        \"label\": \"Poland\"\n      }, {\n        \"value\": \"PT\",\n        \"label\": \"Portugal\"\n      }, {\n        \"value\": \"PR\",\n        \"label\": \"Puerto Rico\"\n      }, {\n        \"value\": \"QA\",\n        \"label\": \"Qatar\"\n      }, {\n        \"value\": \"RE\",\n        \"label\": \"Runion\"\n      }, {\n        \"value\": \"RO\",\n        \"label\": \"Romania\"\n      }, {\n        \"value\": \"RU\",\n        \"label\": \"Russian Federation\"\n      }, {\n        \"value\": \"RW\",\n        \"label\": \"Rwanda\"\n      }, {\n        \"value\": \"BL\",\n        \"label\": \"Saint Barthelemy\"\n      }, {\n        \"value\": \"SH\",\n        \"label\": \"Saint Helena, Ascension and Tristan da Cunha\"\n      }, {\n        \"value\": \"KN\",\n        \"label\": \"Saint Kitts and Nevis\"\n      }, {\n        \"value\": \"LC\",\n        \"label\": \"Saint Lucia\"\n      }, {\n        \"value\": \"MF\",\n        \"label\": \"Saint Martin (French part)\"\n      }, {\n        \"value\": \"PM\",\n        \"label\": \"Saint Pierre and Miquelon\"\n      }, {\n        \"value\": \"VC\",\n        \"label\": \"Saint Vincent and the Grenadines\"\n      }, {\n        \"value\": \"WS\",\n        \"label\": \"Samoa\"\n      }, {\n        \"value\": \"SM\",\n        \"label\": \"San Marino\"\n      }, {\n        \"value\": \"ST\",\n        \"label\": \"Sao Tome and Principe\"\n      }, {\n        \"value\": \"SA\",\n        \"label\": \"Saudi Arabia\"\n      }, {\n        \"value\": \"SN\",\n        \"label\": \"Senegal\"\n      }, {\n        \"value\": \"RS\",\n        \"label\": \"Serbia\"\n      }, {\n        \"value\": \"SC\",\n        \"label\": \"Seychelles\"\n      }, {\n        \"value\": \"SL\",\n        \"label\": \"Sierra Leone\"\n      }, {\n        \"value\": \"SG\",\n        \"label\": \"Singapore\"\n      }, {\n        \"value\": \"SX\",\n        \"label\": \"Sint Maarten (Dutch part)\"\n      }, {\n        \"value\": \"SK\",\n        \"label\": \"Slovakia\"\n      }, {\n        \"value\": \"SI\",\n        \"label\": \"Slovenia\"\n      }, {\n        \"value\": \"SB\",\n        \"label\": \"Solomon Islands\"\n      }, {\n        \"value\": \"SO\",\n        \"label\": \"Somalia\"\n      }, {\n        \"value\": \"ZA\",\n        \"label\": \"South Africa\"\n      }, {\n        \"value\": \"GS\",\n        \"label\": \"South Georgia and the South Sandwich Islands\"\n      }, {\n        \"value\": \"SS\",\n        \"label\": \"South Sudan\"\n      }, {\n        \"value\": \"ES\",\n        \"label\": \"Spain\"\n      }, {\n        \"value\": \"LK\",\n        \"label\": \"Sri Lanka\"\n      }, {\n        \"value\": \"SD\",\n        \"label\": \"Sudan\"\n      }, {\n        \"value\": \"SR\",\n        \"label\": \"Suriname\"\n      }, {\n        \"value\": \"SJ\",\n        \"label\": \"Svalbard and Jan Mayen\"\n      }, {\n        \"value\": \"SZ\",\n        \"label\": \"Swaziland\"\n      }, {\n        \"value\": \"SE\",\n        \"label\": \"Sweden\"\n      }, {\n        \"value\": \"CH\",\n        \"label\": \"Switzerland\"\n      }, {\n        \"value\": \"SY\",\n        \"label\": \"Syrian Arab Republic\"\n      }, {\n        \"value\": \"TW\",\n        \"label\": \"Taiwan, Province of China\"\n      }, {\n        \"value\": \"TJ\",\n        \"label\": \"Tajikistan\"\n      }, {\n        \"value\": \"TZ\",\n        \"label\": \"Tanzania, United Republic of\"\n      }, {\n        \"value\": \"TH\",\n        \"label\": \"Thailand\"\n      }, {\n        \"value\": \"TL\",\n        \"label\": \"Timor-Leste\"\n      }, {\n        \"value\": \"TG\",\n        \"label\": \"Togo\"\n      }, {\n        \"value\": \"TK\",\n        \"label\": \"Tokelau\"\n      }, {\n        \"value\": \"TO\",\n        \"label\": \"Tonga\"\n      }, {\n        \"value\": \"TT\",\n        \"label\": \"Trinidad and Tobago\"\n      }, {\n        \"value\": \"TN\",\n        \"label\": \"Tunisia\"\n      }, {\n        \"value\": \"TR\",\n        \"label\": \"Turkey\"\n      }, {\n        \"value\": \"TM\",\n        \"label\": \"Turkmenistan\"\n      }, {\n        \"value\": \"TC\",\n        \"label\": \"Turks and Caicos Islands\"\n      }, {\n        \"value\": \"TV\",\n        \"label\": \"Tuvalu\"\n      }, {\n        \"value\": \"UG\",\n        \"label\": \"Uganda\"\n      }, {\n        \"value\": \"UA\",\n        \"label\": \"Ukraine\"\n      }, {\n        \"value\": \"AE\",\n        \"label\": \"United Arab Emirates\"\n      }, {\n        \"value\": \"GB\",\n        \"label\": \"United Kingdom\"\n      }, {\n        \"value\": \"US\",\n        \"label\": \"United States\"\n      }, {\n        \"value\": \"UM\",\n        \"label\": \"United States Minor Outlying Islands\"\n      }, {\n        \"value\": \"UY\",\n        \"label\": \"Uruguay\"\n      }, {\n        \"value\": \"UZ\",\n        \"label\": \"Uzbekistan\"\n      }, {\n        \"value\": \"VU\",\n        \"label\": \"Vanuatu\"\n      }, {\n        \"value\": \"VE\",\n        \"label\": \"Venezuela, Bolivarian Republic of\"\n      }, {\n        \"value\": \"VN\",\n        \"label\": \"Viet Nam\"\n      }, {\n        \"value\": \"VG\",\n        \"label\": \"Virgin Islands, British\"\n      }, {\n        \"value\": \"VI\",\n        \"label\": \"Virgin Islands, U.S.\"\n      }, {\n        \"value\": \"WF\",\n        \"label\": \"Wallis and Futuna\"\n      }, {\n        \"value\": \"EH\",\n        \"label\": \"Western Sahara\"\n      }, {\n        \"value\": \"YE\",\n        \"label\": \"Yemen\"\n      }, {\n        \"value\": \"ZM\",\n        \"label\": \"Zambia\"\n      }, {\n        \"value\": \"ZW\",\n        \"label\": \"Zimbabwe\"\n      }]\n    }\n  }\n};\n\n//# sourceURL=webpack://test/../src/config.js?");

/***/ }),

/***/ "../src/export-csv.js":
/*!****************************!*\
  !*** ../src/export-csv.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"exportCsv\": () => (/* binding */ exportCsv)\n/* harmony export */ });\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nvar exportCsv = function exportCsv(fileName, tables) {\n  var conv = function conv(str) {\n    str = str != null ? String(str).replaceAll(',', '') : '';\n    return str.replaceAll(String.fromCharCode(163), String.fromCharCode(194, 163));\n  };\n  var csv = [];\n  //tables\n  var _iterator = _createForOfIteratorHelper(tables),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var table = _step.value;\n      // header\n      var row = [];\n      var orders = [];\n      var _iterator2 = _createForOfIteratorHelper(table.columnOrder),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var order = _step2.value;\n          orders.push(table.primaryColumns[order].originalId);\n          var _iterator4 = _createForOfIteratorHelper(table.tableHeaders),\n            _step4;\n          try {\n            for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n              var head = _step4.value;\n              if (order == head.id) row.push(conv(head.label));\n            }\n          } catch (err) {\n            _iterator4.e(err);\n          } finally {\n            _iterator4.f();\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      csv.push(row.join(','));\n\n      // data\n      var _iterator3 = _createForOfIteratorHelper(table.tableData),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var dataRow = _step3.value;\n          row = [];\n          var _iterator5 = _createForOfIteratorHelper(orders),\n            _step5;\n          try {\n            for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n              var _order = _step5.value;\n              row.push(conv(dataRow[_order]));\n            }\n          } catch (err) {\n            _iterator5.e(err);\n          } finally {\n            _iterator5.f();\n          }\n          csv.push(row.join(','));\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n      csv.push(' ');\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  download(csv.join(\"\\n\"), fileName, 'data:text/csv');\n};\n\n//# sourceURL=webpack://test/../src/export-csv.js?");

/***/ }),

/***/ "../src/filter.js":
/*!************************!*\
  !*** ../src/filter.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"filter\": () => (/* binding */ filter)\n/* harmony export */ });\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nvar filter = {\n  getPeriodAFrom: function getPeriodAFrom(format) {\n    return format ? moment(appsmith.store.periodFrom).format('YYYY-MM-DD') : moment(appsmith.store.periodFrom);\n  },\n  getPeriodATo: function getPeriodATo(format) {\n    return format ? moment(appsmith.store.periodTo).format('YYYY-MM-DD') : moment(appsmith.store.periodTo);\n  },\n  getPeriodBFrom: function getPeriodBFrom(format) {\n    return format ? moment(appsmith.store.compareFrom).format('YYYY-MM-DD') : moment(appsmith.store.compareFrom);\n  },\n  getPeriodBTo: function getPeriodBTo(format) {\n    return format ? moment(appsmith.store.compareTo).format('YYYY-MM-DD') : moment(appsmith.store.compareTo);\n  },\n  getPeriodCFrom: function getPeriodCFrom(format) {\n    return format ? moment(appsmith.store.yearFrom).format('YYYY-MM-DD') : moment(appsmith.store.yearFrom);\n  },\n  getPeriodCTo: function getPeriodCTo(format) {\n    return format ? moment(appsmith.store.yearTo).format('YYYY-MM-DD') : moment(appsmith.store.yearTo);\n  },\n  getPeriodYFrom: function getPeriodYFrom(format) {\n    if (appsmith.store.compare == 'py') return filter.getPeriodAFrom(format);\n    var dt = moment(appsmith.store.yearTo);\n    return format ? dt.format('YYYY-MM-DD') : dt;\n  },\n  getPeriodYTo: function getPeriodYTo(format) {\n    if (appsmith.store.compare == 'py') return filter.getPeriodATo(format);\n    var dt = moment(Date());\n    return format ? dt.format('YYYY-MM-DD') : dt;\n  },\n  showFilters: function showFilters() {\n    showModal('FilterModal');\n  },\n  confirm: function confirm() {\n    closeModal('FilterModal');\n    if (typeof filter_period == \"undefined\") {\n      return;\n    }\n    var range = filter_period.selectedOptionValue;\n    range = range ? range : 'week';\n    if (range == 'date') {\n      var to = moment(filter_dateTo.selectedDate);\n      var from = moment(filter_dateFrom.selectedDate);\n      var diff = to.diff(from, 'days');\n      storeValue('periodFrom', from.format('YYYY-MM-DD'));\n      storeValue('periodTo', to.format('YYYY-MM-DD'));\n      storeValue('compareFrom', from.subtract(1 + diff, 'day').format('YYYY-MM-DD'));\n      storeValue('compareTo', to.subtract(1 + diff, 'day').format('YYYY-MM-DD'));\n      storeValue('yearFrom', from.subtract(1, 'year').format('YYYY-MM-DD'));\n      storeValue('yearTo', moment(appsmith.store.periodTo).subtract(1, 'year').format('YYYY-MM-DD'));\n      storeValue('period', appsmith.store.periodFrom + ' - ' + appsmith.store.periodTo);\n      storeValue('compare', appsmith.store.compareFrom + ' - ' + appsmith.store.compareTo);\n      storeValue('short', 'pp');\n      storeValue('year', 'py');\n      storeValue('interval', 'day');\n    } else if (range == 'week') {\n      storeValue('periodFrom', moment(Date()).startOf('week').format('YYYY-MM-DD'));\n      storeValue('periodTo', moment(Date()).endOf('week').format('YYYY-MM-DD'));\n      storeValue('compareFrom', moment(Date()).subtract(1, 'week').startOf('week').format('YYYY-MM-DD'));\n      storeValue('compareTo', moment(Date()).subtract(1, 'week').endOf('week').format('YYYY-MM-DD'));\n      storeValue('yearFrom', moment(appsmith.store.periodFrom).subtract(1, 'year').startOf('week').format('YYYY-MM-DD'));\n      storeValue('yearTo', moment(appsmith.store.periodTo).subtract(1, 'year').endOf('week').format('YYYY-MM-DD'));\n      storeValue('period', 'This week');\n      storeValue('compare', 'Previous');\n      storeValue('short', 'pw');\n      storeValue('year', 'py');\n      storeValue('interval', 'day');\n    } else if (range == 'month') {\n      storeValue('periodFrom', moment(Date()).startOf('month').format('YYYY-MM-DD'));\n      storeValue('periodTo', moment(Date()).endOf('month').format('YYYY-MM-DD'));\n      storeValue('compareFrom', moment(Date()).subtract(1, 'month').startOf('month').format('YYYY-MM-DD'));\n      storeValue('compareTo', moment(Date()).subtract(1, 'month').endOf('month').format('YYYY-MM-DD'));\n      storeValue('yearFrom', moment(appsmith.store.periodFrom).subtract(1, 'year').startOf('month').format('YYYY-MM-DD'));\n      storeValue('yearTo', moment(appsmith.store.periodTo).subtract(1, 'year').endOf('month').format('YYYY-MM-DD'));\n      storeValue('period', 'This month');\n      storeValue('compare', 'Previous');\n      storeValue('short', 'pm');\n      storeValue('year', 'py');\n      storeValue('interval', 'week');\n    } else if (range == 'year') {\n      storeValue('periodFrom', moment(Date()).startOf('year').format('YYYY-MM-DD'));\n      storeValue('periodTo', moment(Date()).endOf('year').format('YYYY-MM-DD'));\n      storeValue('compareFrom', moment(Date()).subtract(1, 'year').startOf('year').format('YYYY-MM-DD'));\n      storeValue('compareTo', moment(Date()).subtract(1, 'year').endOf('year').format('YYYY-MM-DD'));\n      storeValue('yearFrom', moment(appsmith.store.periodFrom).subtract(2, 'year').startOf('year').format('YYYY-MM-DD'));\n      storeValue('yearTo', moment(appsmith.store.periodTo).subtract(2, 'year').endOf('year').format('YYYY-MM-DD'));\n      storeValue('period', 'This year');\n      storeValue('compare', 'Previous');\n      storeValue('short', 'py');\n      storeValue('year', 'p2y');\n      storeValue('interval', 'month');\n    } else if (range == 'fyear') {\n      storeValue('periodFrom', '2022-04-06');\n      storeValue('periodTo', '2023-04-05');\n      storeValue('compareFrom', '2021-04-06');\n      storeValue('compareTo', '2022-04-05');\n      storeValue('yearFrom', '2020-04-06');\n      storeValue('yearTo', '2021-04-05');\n      storeValue('period', 'This fiscal year');\n      storeValue('compare', 'Previous');\n      storeValue('short', 'py');\n      storeValue('year', 'p2y');\n      storeValue('interval', 'month');\n    } else if (range == 'lweek') {\n      storeValue('periodFrom', moment(Date()).subtract(1, 'week').startOf('week').format('YYYY-MM-DD'));\n      storeValue('periodTo', moment(Date()).subtract(1, 'week').endOf('week').format('YYYY-MM-DD'));\n      storeValue('compareFrom', moment(Date()).subtract(2, 'week').startOf('week').format('YYYY-MM-DD'));\n      storeValue('compareTo', moment(Date()).subtract(2, 'week').endOf('week').format('YYYY-MM-DD'));\n      storeValue('yearFrom', moment(appsmith.store.periodFrom).subtract(1, 'year').startOf('week').format('YYYY-MM-DD'));\n      storeValue('yearTo', moment(appsmith.store.periodTo).subtract(1, 'year').endOf('week').format('YYYY-MM-DD'));\n      storeValue('period', 'Last week');\n      storeValue('compare', 'Previous');\n      storeValue('short', 'pw');\n      storeValue('year', 'py');\n      storeValue('interval', 'day');\n    } else if (range == 'lmonth') {\n      storeValue('periodFrom', moment(Date()).subtract(1, 'month').startOf('month').format('YYYY-MM-DD'));\n      storeValue('periodTo', moment(Date()).subtract(1, 'month').endOf('month').format('YYYY-MM-DD'));\n      storeValue('compareFrom', moment(Date()).subtract(2, 'month').startOf('month').format('YYYY-MM-DD'));\n      storeValue('compareTo', moment(Date()).subtract(2, 'month').endOf('month').format('YYYY-MM-DD'));\n      storeValue('yearFrom', moment(appsmith.store.periodFrom).subtract(1, 'year').startOf('month').format('YYYY-MM-DD'));\n      storeValue('yearTo', moment(appsmith.store.periodTo).subtract(1, 'year').endOf('month').format('YYYY-MM-DD'));\n      storeValue('period', 'Last month');\n      storeValue('compare', 'Previous');\n      storeValue('short', 'pm');\n      storeValue('year', 'py');\n      storeValue('interval', 'week');\n    } else if (range == 'lyear') {\n      storeValue('periodFrom', moment(Date()).subtract(1, 'year').startOf('year').format('YYYY-MM-DD'));\n      storeValue('periodTo', moment(Date()).subtract(1, 'year').endOf('year').format('YYYY-MM-DD'));\n      storeValue('compareFrom', moment(Date()).subtract(2, 'year').startOf('year').format('YYYY-MM-DD'));\n      storeValue('compareTo', moment(Date()).subtract(2, 'year').endOf('year').format('YYYY-MM-DD'));\n      storeValue('yearFrom', moment(appsmith.store.periodFrom).subtract(2, 'year').startOf('year').format('YYYY-MM-DD'));\n      storeValue('yearTo', moment(appsmith.store.periodTo).subtract(2, 'year').endOf('year').format('YYYY-MM-DD'));\n      storeValue('period', 'Last year');\n      storeValue('compare', 'Previous');\n      storeValue('short', 'py');\n      storeValue('year', 'p2y');\n      storeValue('interval', 'month');\n    } else if (range == 'lfyear') {\n      storeValue('periodFrom', '2021-04-06');\n      storeValue('periodTo', '2022-04-05');\n      storeValue('compareFrom', '2020-04-06');\n      storeValue('compareTo', '2021-04-05');\n      storeValue('yearFrom', '2019-04-06');\n      storeValue('yearTo', '2020-04-05');\n      storeValue('period', 'Last fiscal year');\n      storeValue('compare', 'Previous');\n      storeValue('short', 'py');\n      storeValue('year', 'p2y');\n      storeValue('interval', 'month');\n    } else if (range == '7d') {\n      storeValue('periodFrom', moment(Date()).subtract(7, 'day').format('YYYY-MM-DD'));\n      storeValue('periodTo', moment(Date()).format('YYYY-MM-DD'));\n      storeValue('compareFrom', moment(Date()).subtract(7 + 1 + 7, 'day').format('YYYY-MM-DD'));\n      storeValue('compareTo', moment(Date()).subtract(7 + 1, 'day').format('YYYY-MM-DD'));\n      storeValue('yearFrom', moment(appsmith.store.periodFrom).subtract(1, 'year').format('YYYY-MM-DD'));\n      storeValue('yearTo', moment(appsmith.store.periodTo).subtract(1, 'year').format('YYYY-MM-DD'));\n      storeValue('period', 'Last 7 days');\n      storeValue('compare', 'Previous');\n      storeValue('short', 'pd');\n      storeValue('year', 'py');\n      storeValue('interval', 'day');\n    } else if (range == '30d') {\n      storeValue('periodFrom', moment(Date()).subtract(30, 'day').format('YYYY-MM-DD'));\n      storeValue('periodTo', moment(Date()).format('YYYY-MM-DD'));\n      storeValue('compareFrom', moment(Date()).subtract(30 + 1 + 30, 'day').format('YYYY-MM-DD'));\n      storeValue('compareTo', moment(Date()).subtract(30 + 1, 'day').format('YYYY-MM-DD'));\n      storeValue('yearFrom', moment(appsmith.store.periodFrom).subtract(1, 'year').format('YYYY-MM-DD'));\n      storeValue('yearTo', moment(appsmith.store.periodTo).subtract(1, 'year').format('YYYY-MM-DD'));\n      storeValue('period', 'Last 30 days');\n      storeValue('compare', 'Previous');\n      storeValue('short', 'pd');\n      storeValue('year', 'py');\n      storeValue('interval', 'day');\n    } else if (range == '90d') {\n      storeValue('periodFrom', moment(Date()).subtract(90, 'day').format('YYYY-MM-DD'));\n      storeValue('periodTo', moment(Date()).format('YYYY-MM-DD'));\n      storeValue('compareFrom', moment(Date()).subtract(90 + 1 + 90, 'day').format('YYYY-MM-DD'));\n      storeValue('compareTo', moment(Date()).subtract(90 + 1, 'day').format('YYYY-MM-DD'));\n      storeValue('yearFrom', moment(appsmith.store.periodFrom).subtract(1, 'year').format('YYYY-MM-DD'));\n      storeValue('yearTo', moment(appsmith.store.periodTo).subtract(1, 'year').format('YYYY-MM-DD'));\n      storeValue('period', 'Last 90 days');\n      storeValue('compare', 'Previous');\n      storeValue('short', 'pd');\n      storeValue('year', 'py');\n      storeValue('interval', 'week');\n    } else if (range == '12m') {\n      storeValue('periodFrom', moment(Date()).subtract(12, 'month').format('YYYY-MM-DD'));\n      storeValue('periodTo', moment(Date()).format('YYYY-MM-DD'));\n      storeValue('compareFrom', moment(Date()).subtract(12 + 1 + 12, 'month').format('YYYY-MM-DD'));\n      storeValue('compareTo', moment(Date()).subtract(12 + 1, 'month').format('YYYY-MM-DD'));\n      storeValue('yearFrom', moment(appsmith.store.periodFrom).subtract(23 + 1 + 12, 'month').format('YYYY-MM-DD'));\n      storeValue('yearTo', moment(appsmith.store.periodTo).subtract(23 + 1, 'month').format('YYYY-MM-DD'));\n      storeValue('period', 'Last 12 months');\n      storeValue('compare', 'Previous');\n      storeValue('short', 'py');\n      storeValue('year', 'p2y');\n      storeValue('interval', 'month');\n    } else {\n      storeValue('periodFrom', moment(Date()).startOf('week').format('YYYY-MM-DD'));\n      storeValue('periodTo', moment(Date()).endOf('week').format('YYYY-MM-DD'));\n      storeValue('compareFrom', moment(Date()).subtract(1, 'week').startOf('week').format('YYYY-MM-DD'));\n      storeValue('compareTo', moment(Date()).subtract(1, 'week').endOf('week').format('YYYY-MM-DD'));\n      storeValue('yearFrom', moment(appsmith.store.periodFrom).subtract(1, 'year').startOf('week').format('YYYY-MM-DD'));\n      storeValue('yearTo', moment(appsmith.store.periodTo).subtract(1, 'year').endOf('week').format('YYYY-MM-DD'));\n      storeValue('period', 'Last week');\n      storeValue('compare', 'Previous');\n      storeValue('short', 'pw');\n      storeValue('year', 'py');\n      storeValue('interval', 'day');\n    }\n  },\n  yearsPeriod: function yearsPeriod() {\n    var data = [{\n      \"label\": \"Last 12 months\",\n      \"value\": \"\"\n    }];\n    for (var year = moment(Date()).year(); year >= 2015; year--) {\n      data.push({\n        \"label\": \"Year \" + year,\n        \"value\": year\n      });\n    }\n    return data;\n  },\n  arrayToString: function arrayToString(values) {\n    return '[\"' + values.join('\",\"') + '\"]';\n  },\n  skuCondition: function skuCondition() {\n    return filter_sku.text ? 'sku: {contains: \"' + filter_sku.text + '\"}' : '';\n  },\n  channelCondition: function channelCondition(r) {\n    var codes = _toConsumableArray(filter_channel.selectedOptionValues);\n    if (r) {\n      codes.push(Math.random().toString()); // randomize query with unreal store code\n    }\n\n    return 'storeCode: {in: ' + filter.arrayToString(codes) + '}';\n  },\n  statusCondition: function statusCondition() {\n    return filter_status.selectedOptionValues.length ? 'status: {in: ' + filter.arrayToString(filter_status.selectedOptionValues) + '}' : '';\n  },\n  countryCondition: function countryCondition() {\n    return filter_country.selectedOptionValues.length ? 'country: {in: ' + filter.arrayToString(filter_country.selectedOptionValues) + '}' : '';\n  },\n  paymentCondition: function paymentCondition() {\n    return filter_payment.selectedOptionValues.length ? 'payment: {in: ' + filter.arrayToString(filter_payment.selectedOptionValues) + '}' : '';\n  },\n  sizeCondition: function sizeCondition() {\n    return filter_size.selectedOptionValues.length ? 'size: {in: ' + filter.arrayToString(filter_size.selectedOptionValues) + '}' : '';\n  },\n  colorCondition: function colorCondition() {\n    return filter_color.selectedOptionValues.length ? 'color: {in: ' + filter.arrayToString(filter_color.selectedOptionValues) + '}' : '';\n  },\n  categoryCondition: function categoryCondition() {\n    return filter_category.selectedOptionValues.length ? 'category: {in: ' + filter.arrayToString(filter_category.selectedOptionValues) + '}' : '';\n  }\n};\n\n//# sourceURL=webpack://test/../src/filter.js?");

/***/ }),

/***/ "../src/format.js":
/*!************************!*\
  !*** ../src/format.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"format\": () => (/* binding */ format)\n/* harmony export */ });\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config */ \"../src/config.js\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\n\nvar format = {\n  round: function round(n, d) {\n    return Number(Math.round(n + 'e+' + d) + 'e-' + d);\n  },\n  percent: function percent(a, b) {\n    return a && b ? Math.round(Number(10000 * (a - b) / b) / 100).toLocaleString(_config__WEBPACK_IMPORTED_MODULE_0__.config.ui.locale) + '%' : null;\n  },\n  format: function format(title, v, hideZero) {\n    if (v === '' || v === null || isNaN(v)) return '';\n    if (v === 0 && hideZero) return '';\n    var options = {\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    };\n    title = title.toLowerCase();\n    if (title.includes('aov') || title.includes('atv') || title.includes('rate') || title.includes('%') || title.includes('conversion')) {\n      options['minimumFractionDigits'] = 2;\n      options['maximumFractionDigits'] = 2;\n      v = Math.round(100 * v) / 100;\n    } else {\n      v = Math.round(v);\n    }\n    if (title.includes('Â£') || title.includes('$')) {\n      options['style'] = \"currency\";\n      options['currency'] = _config__WEBPACK_IMPORTED_MODULE_0__.config.ui.currency;\n    }\n    return v.toLocaleString(window.config.ui.locale, options);\n  },\n  toArray: function toArray(obj) {\n    var arr = [];\n    var _iterator = _createForOfIteratorHelper(Object.keys(obj).sort()),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var k = _step.value;\n        arr.push(obj[k]);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    return arr;\n  },\n  currency: function currency(v, maxFraction, minFraction) {\n    if (v === '' || v === null || isNaN(v)) return '';\n    if (v === 0 && hideZero) return '';\n    var settings = {\n      style: 'currency',\n      currency: 'GBP'\n    };\n    if (maxFraction > 0 || maxFraction === 0 || maxFraction === '0') {\n      settings['maximumFractionDigits'] = maxFraction;\n    }\n    if (minFraction > 0 || minFraction === 0 || minFraction === '0') {\n      settings['minimumFractionDigits'] = minFraction;\n    }\n    var formater = new Intl.NumberFormat('en-GB', settings);\n    var result = formater.format(v);\n    result = result.replace(/[^0-9\\,\\.\\-]/i, '').trim();\n    return '$' + result;\n  },\n  toInt: function toInt(val) {\n    return val && (typeof val === 'string' || val instanceof String) ? parseInt(val.replace(/[^\\d.-]/g, '')) : val;\n  },\n  colorizeRow: function colorizeRow(val, negativeOnly) {\n    var v = format.toInt(val);\n    if (v == 0) return '';\n    if (v > 0 && negativeOnly) return '';\n    return v > 0 ? _config__WEBPACK_IMPORTED_MODULE_0__.config.ui.table.colors.positive : _config__WEBPACK_IMPORTED_MODULE_0__.config.ui.table.colors.negative;\n  },\n  colorizeCell: function colorizeCell(val) {\n    if (!val) return '#F0F0F0';\n    if (!(val.length > 0)) return '#F0F0F0';\n    return '#FFFFFF';\n  },\n  cap: function cap(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n};\n\n//# sourceURL=webpack://test/../src/format.js?");

/***/ }),

/***/ "../src/index.js":
/*!***********************!*\
  !*** ../src/index.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"config\": () => (/* reexport safe */ _config__WEBPACK_IMPORTED_MODULE_1__.config),\n/* harmony export */   \"exportCsv\": () => (/* reexport safe */ _export_csv__WEBPACK_IMPORTED_MODULE_3__.exportCsv),\n/* harmony export */   \"filter\": () => (/* reexport safe */ _filter__WEBPACK_IMPORTED_MODULE_0__.filter),\n/* harmony export */   \"format\": () => (/* reexport safe */ _format__WEBPACK_IMPORTED_MODULE_2__.format)\n/* harmony export */ });\n/* harmony import */ var _filter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./filter */ \"../src/filter.js\");\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./config */ \"../src/config.js\");\n/* harmony import */ var _format__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./format */ \"../src/format.js\");\n/* harmony import */ var _export_csv__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./export-csv */ \"../src/export-csv.js\");\n\n\n\n\n\n\n//# sourceURL=webpack://test/../src/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("../src/index.js");
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});